-- INI-Datei
-- Fraren 07
-- von Frapela
-- 21.09.2003
-- Update: 09.11.2003

dofile(LEVEL_DIR .. "/fraren07.txt")

globals.use_user_stats   = 1
globals.score_per_second = 0
globals.extra_amount     = 0
player[1]:set_extra_power(0)
player[1]:set_extra_recharge(0)

fracht = {}

local n
for n = 0, player[1]:get_avail_weapon_slots() do
  player[1]:deactivate_weapon_slot(n)
  local waffenschacht   = player[1]:get_weapon_slot(n)
  waffenschacht.type    = 0
  waffenschacht.active  = 0
  waffenschacht.bullets = 0
  waffenschacht.reload  = 0
  player[1]:set_weapon_slot(n, waffenschacht)
end

Heimatbasis = bases:add(  0, PLAYER_BASE, 1210, 1406 )
fracht[1] = bases:add(  1, CARGO_BASE,  710,  639 )
fracht[2] = bases:add(  2, CARGO_BASE,  968, 1404 )
fracht[3] = bases:add(  3, ENEMY_S_BASE, 1120,  584 )
fracht[4] = bases:add(  4, ENEMY_S_BASE, 1458,  583 )
fracht[5] = bases:add(  5, CARGO_BASE, 1528, 1402 )
local i
for i = 1, 5 do
  fracht[i]:set_cargo_type(CARGO_NORMAL)
  fracht[i]:set_cargo_weight(1)
  if (LANGUAGE == LANG_DE) then
    fracht[i]:set_cargo_name("Renn-Fracht")
  else
    fracht[i]:set_cargo_name("Race-Cargo")
  end
end

myob = objects:add(  0, OBJ_TREE2, 1510, 1381 )

ladung       = 0
zeit_ende    = 0
zeit_anzeige = 0
verbesserung = 0
blau         = globals:make_color(  36,  51, 247 )
h_blau       = globals:make_color(  91, 162, 255 )
gpanelosd = gpanel[1].osd:get_osdbit(1000)
if (LANGUAGE == LANG_DE) then
  text_sek  = "Zeit: "
else
  text_sek  = "Time: "
end

function frarenxx()
  if not fraren_los then
    if player[1]:get_thrust() ~= 0 then
      fraren_los = 1
    end
  elseif fraren_los == 1 then
    fraren_los = 2
    if highscore_frarenxx >= 360000 then
      highscore_frarenxx = 359999
    end
    level_zeit = highscore_frarenxx * 5 / 3   -- um von 60 Ticks pro Sekunde auf Hundertstel zu kommen
    rekord_zeit = string.format( "%02d:%02d,%02d", ( level_zeit - ( ( math.mod( ( level_zeit - math.mod( level_zeit, 100 ) ) / 100, 60 ) * 100 )   +   math.mod( level_zeit, 100 ) ) ) / 6000, math.mod( ( level_zeit - math.mod( level_zeit, 100 ) ) / 100, 60 ), math.mod( level_zeit, 100 )  )
    local frapelaosd = playmap[1].osd:get_osdbit(1000)
    if (LANGUAGE == LANG_DE) then
      text_rekord  = "[f:impact14][c:orange]Rekord-Zeit: "
    else
      text_rekord  = "[f:impact14][c:orange]Record-Time: "
    end
    frapelaosd:draw_typewriter_text( text_rekord .. rekord_zeit, 5, 5, 0 )
  else
    if zeit_ende == 0 then
      gpanelosd:clear()
      zeit_anzeige = zeit_anzeige + 1 
      if zeit_anzeige >= 360000 then
        zeit_anzeige = 359999
      end
      level_zeit = zeit_anzeige * 5 / 3   -- um von 60 Ticks pro Sekunde auf Hundertstel zu kommen
      uhr = string.format( "%02d:%02d,%02d", ( level_zeit - ( ( math.mod( ( level_zeit - math.mod( level_zeit, 100 ) ) / 100, 60 ) * 100 )   +   math.mod( level_zeit, 100 ) ) ) / 6000, math.mod( ( level_zeit - math.mod( level_zeit, 100 ) ) / 100, 60 ), math.mod( level_zeit, 100 )  )
      if     zeit_anzeige > highscore_frarenxx then
        gpanelosd:draw_text(FONT_IMPACT14, text_sek .. uhr, globals.col_orange, 117, 15, 0)
      elseif zeit_anzeige > highscore_frarenxx - 600 then
        if mod( zeit_anzeige, 60 ) == 0 then
          gsound:play_sound(SOUND_MENU_NONO, 100)
        end
        gpanelosd:draw_text(FONT_IMPACT14, text_sek .. uhr, globals.col_yellow, 117, 15, 0)
      else
        gpanelosd:draw_text(FONT_IMPACT14, text_sek .. uhr, globals.col_green,  117, 15, 0)
      end
    end
  end
end   -- frarenxx()

function hook_player_takes_cargo_0(pl, ba)
  pl:set_weight( 1 )
  if     pl:get_land_base() == 1 then
    ladung = ladung + 1
  elseif pl:get_land_base() == 2 then
    ladung = ladung + 1
  elseif pl:get_land_base() == 3 then
    ladung = ladung + 1
  elseif pl:get_land_base() == 4 then
    ladung = ladung + 1
  elseif pl:get_land_base() == 5 then
    ladung = ladung + 1
  end
end   -- hook_player_takes_cargo_0(pl, ba)

function hook_player_dead_0(pl)
  if pl:get_weight() > 0 then
    zeit_ende = zeit_anzeige 
    pl:set_mission_status(-1)
  end
end   -- hook_player_dead_0(pl)

function hook_player_returns_cargo_0(pl)
  if     ladung == 5 then
    zeit_ende = zeit_anzeige 
    if highscore_frarenxx > zeit_ende then
      if zeit_ende >= 360000 then
        zeit_ende = 359999
      end
      verbesserung = highscore_frarenxx - zeit_ende
      speichern()
    end
    local myosd = playmap[1].osd:get_osdbit(1000)
    myosd:clear()
    pl:set_mission_status(1)
  elseif ladung == 4 then
    local frapelaosd = playmap[1].osd:get_osdbit(1000)
    if (LANGUAGE == LANG_DE) then
      text = "[f:impact14][c:yellow]Dir fehlt noch [c:orange]ein[c:yellow] Paket! "
    else
      text = "[f:impact14][c:yellow]You have to get [c:orange]one[c:yellow] parcel yet! "
    end
    frapelaosd:draw_typewriter_text( text, 5, 5, 0 )
  elseif ladung <  4 then
    local frapelaosd = playmap[1].osd:get_osdbit(1000)
    if (LANGUAGE == LANG_DE) then
      text = "[f:impact14][c:yellow]Dir fehlen noch [c:orange]"..5 - ladung.."[c:yellow] Pakete! "
    else
      text = "[f:impact14][c:yellow]You have to get [c:orange]"..5 - ladung.."[c:yellow] parcels yet! "
    end
    frapelaosd:draw_typewriter_text( text, 5, 5, 0 )
  end
  pl:set_weight( 0 )
  pl:set_dont_continue(1)
end   -- hook_player_returns_cargo_0(pl)

function speichern()
  local datum = os.date("*t")
  local aktuelle_zeit = string.format( "%02d:%02d:%02d", datum.hour, datum.min, datum.sec  ) .. " am " .. string.format( "%02d.%02d.%02d", datum.day, datum.month, datum.year )
  datei = io.open(LEVEL_DIR .. "/fraren07.txt", "w")
  datei:write( '-- Levelrekord-Datei' .. '\n' )
  datei:write( '-- Fraren 07' .. '\n' )
  datei:write( '-- von Frapela' .. '\n' )
  datei:write( '-- ' .. aktuelle_zeit .. '\n' )
  datei:write( '\n' )
  datei  :write( 'highscore_frarenxx = ' .. zeit_ende .. '\n' )
  datei:close()
end   -- speichern()

function hook_exit_level_0()
  globals.user_stats[3]:set_textcolor(blau)
  globals.user_stats[3]:set_valuecolor(0, blau)
  globals.user_stats[6]:set_textcolor(h_blau)
  globals.user_stats[6]:set_valuecolor(0, h_blau)
  if verbesserung > 0 then
    level_zeit = ( zeit_ende + verbesserung ) * 5 / 3   -- um von 60 Ticks pro Sekunde auf Hundertstel zu kommen
    zeit_alt = string.format( "%02d:%02d,%02d", ( level_zeit - ( ( math.mod( ( level_zeit - math.mod( level_zeit, 100 ) ) / 100, 60 ) * 100 )   +   math.mod( level_zeit, 100 ) ) ) / 6000, math.mod( ( level_zeit - math.mod( level_zeit, 100 ) ) / 100, 60 ), math.mod( level_zeit, 100 )  )
    level_zeit = zeit_ende * 5 / 3   -- um von 60 Ticks pro Sekunde auf Hundertstel zu kommen
    zeit_ende = string.format( "%02d:%02d:%02d", ( level_zeit - ( ( math.mod( ( level_zeit - math.mod( level_zeit, 100 ) ) / 100, 60 ) * 100 )   +   math.mod( level_zeit, 100 ) ) ) / 6000, math.mod( ( level_zeit - math.mod( level_zeit, 100 ) ) / 100, 60 ), math.mod( level_zeit, 100 )  )
    if (LANGUAGE == LANG_DE) then
      globals.user_stats[3]:set_text("alte Rekordzeit")
      globals.user_stats[6]:set_text("aktuelle Rekordzeit")
    else
      globals.user_stats[3]:set_text("old Record-Time")
      globals.user_stats[6]:set_text("Record-Time now")
    end
    globals.user_stats[3]:set_value( 0, zeit_alt )
    globals.user_stats[6]:set_value( 0, zeit_ende )
    globals:set_highscore( zeit_ende )
  else
    level_zeit = highscore_frarenxx * 5 / 3   -- um von 60 Ticks pro Sekunde auf Hundertstel zu kommen
    zeit_alt = string.format( "%02d:%02d,%02d", ( level_zeit - ( ( math.mod( ( level_zeit - math.mod( level_zeit, 100 ) ) / 100, 60 ) * 100 )   +   math.mod( level_zeit, 100 ) ) ) / 6000, math.mod( ( level_zeit - math.mod( level_zeit, 100 ) ) / 100, 60 ), math.mod( level_zeit, 100 )  )
    level_zeit = zeit_ende * 5 / 3   -- um von 60 Ticks pro Sekunde auf Hundertstel zu kommen
    zeit_ende = string.format( "%02d:%02d:%02d", ( level_zeit - ( ( math.mod( ( level_zeit - math.mod( level_zeit, 100 ) ) / 100, 60 ) * 100 )   +   math.mod( level_zeit, 100 ) ) ) / 6000, math.mod( ( level_zeit - math.mod( level_zeit, 100 ) ) / 100, 60 ), math.mod( level_zeit, 100 )  )
    if (LANGUAGE == LANG_DE) then
      globals.user_stats[3]:set_text("Rekordzeit")
      globals.user_stats[6]:set_text("aktuelle Zeit")
    else
      globals.user_stats[3]:set_text("Record-Time")
      globals.user_stats[6]:set_text("Time now")
    end
    globals.user_stats[3]:set_value( 0, zeit_alt )
    globals.user_stats[6]:set_value( 0, zeit_ende )
  end
end   -- hook_exit_level_0()
