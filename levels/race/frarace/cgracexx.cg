-- CG-Race XX
-- CG-Datei
-- von Frapela
-- 22. November 2004

local n
for n = 1, globals.players do
  player[n].controls:disable()
end
gpanel[1]:set_active(0) 
menu_aktiv        = 1
spiel_art         = 1
globals.race_laps = 6
CG_anz            = 6
CG_flug_kunst     = 1
CG_flug_tempo     = 3
CG_schuss         = 1
runden_zaehler    = 0
gegner_tot        = 0
pos_x             = 1
gegner            = {}
gegner_bild       = {}
gegner_runde      = {}
ge_ru_alt         = {}
sp_ru_alt         = {}
weg_punkt         = {}
wp_x_koor         = {}
wp_y_koor         = {}
menu_bild_li      = {}
menu_bild_re      = {}
for n = 1, 6 do
  menu_bild_re[n] = {}
end

h_blau            = globals:make_color(  91, 162, 255 )   -- Nr. 185
blau              = globals:make_color(  36,  51, 247 )   -- Nr. 122
d_blau            = globals:make_color(  15,  28, 181 )   -- Nr. 112
h_rot             = globals:make_color( 250, 113,   4 )   -- Nr. 208
h_gruen           = globals:make_color( 121, 178,  52 )   -- Nr. 177
gruen             = globals:make_color(  72, 145,  52 )   -- Nr. 157
h_gelb            = globals:make_color( 237, 210,  16 )   -- Nr. 238
weiss             = globals:make_color( 221, 220, 221 )   -- Nr. 254
h_grau            = globals:make_color( 175, 172, 175 )   -- Nr. 246
grau              = globals:make_color( 110, 109, 108 )   -- Nr. 240

bildschirm_osd    = playmap[1].osd:add( 1, 0, 0, 640, 480, OSDBIT_SCREEN )
local x1          = 10
local y1          = 40
positionen_osd    = playmap[1].osd:add( 2, x1, y1, x1+55, y1+100, OSDBIT_SCREEN )
if globals.splitscreen == 1 then
  gpanel[2]:set_active(0) 
  menu_bild_re_2 = {}
  for n = 1, 6 do
    menu_bild_re_2[n] = {}
  end
  bildschirm_osd_2 = playmap[2].osd:add( 3, 0, 0, 640, 480, OSDBIT_SCREEN )
  positionen_osd_2 = playmap[2].osd:add( 4, x1, y1, x1+55, y1+100, OSDBIT_SCREEN )
end

if (LANGUAGE == LANG_DE) then
  text_titel         = "Computer-Gegner-Einstellungen"
  text_titel_2       = "er-Einstellungen"
  text_spiel_art     = "Art des Spiels"
  text_spiel_art1    = "RENNEN"
  text_spiel_art2    = "KNOCK OUT"
  text_runden_anz    = "Runden Anzahl"
  text_CG_anz        = "Gegner Anzahl"
  text_CG_flug_kunst = "Flugfaehigkeit"
  text_CG_flug_tempo = "Fluggeschwindigkeit"
  text_CG_schuss     = "Schusskraft"
  text_waehlen       = "mit Pfeiltasten waehlen"
  text_waehlen_2     = "ten waehlen"
  text_bestaetigen   = "mit Return bestaetigen"
  text_bestaetigen_2 = " bestaetigen"
  text_gegner        = "Gegner "
  text_ende          = "Sieger ist "
else
  text_titel         = "Computer-Enemy-Adjustment"
  text_titel_2       = "my-Adjustment"
  text_spiel_art     = "Kind of game"
  text_spiel_art1    = "RACE"
  text_spiel_art2    = "KNOCK OUT"
  text_runden_anz    = "lap number"
  text_CG_anz        = "enemy number"
  text_CG_flug_kunst = "flight skill"
  text_CG_flug_tempo = "flight tempo"
  text_CG_schuss     = "shot power"
  text_waehlen       = "choose with arrow-keys"
  text_waehlen_2     = " arrow-keys"
  text_bestaetigen   = "confirm with Return"
  text_bestaetigen_2 = "ith Return"
  text_gegner        = "Enemy "
  text_ende          = "The winner is "
end

function cgracexx()
  if     spiel_phase == 0 then
    if __race_pl[1].startcounter < 1 then
      spiel_phase = 1
    end
  elseif spiel_phase == 1 then
    for n = 1, CG_anz do
      if weg_punkt[n] ~= nil then
        if ( gegner[n]:get_x() == wp_x_koor[n] ) and ( gegner[n]:get_y() == wp_y_koor[n] ) then
          weg_punkt_ermittlung( n )
        end
        if weg_punkt[n] <= -1 then
          weg_punkt[n] = weg_punkt[n] + 1
          if weg_punkt[n] == 0 then
            weg_punkt_ermittlung( n )
          end
        end
      end
    end
    for n = 1, CG_anz + globals.players do
      if n <= CG_anz then
        if ge_ru_alt[n] ~= gegner_runde[n] then
          positionen_anzeigen( n )
          if ( spiel_art == 2 ) and ( gegner_runde[n] > 1 ) then
            knock_out_pruefung( n )
          end
          ge_ru_alt[n] = gegner_runde[n]
        end
      else
        if sp_ru_alt[n-CG_anz] ~= __race_pl[n-CG_anz].cur_lap then
          positionen_anzeigen( n )
          if ( spiel_art == 2 ) and ( __race_pl[n-CG_anz].cur_lap > 1 ) then
            knock_out_pruefung( n )
          end
            sp_ru_alt[n-CG_anz] = __race_pl[n-CG_anz].cur_lap
        end
      end
    end
  end
end   -- cgracexx()

function positionen_anzeigen( pruef_nr )
  if pruef_nr <= CG_anz then   -- ein Gegner hat Runde beendet
    if runden_zaehler < gegner_runde[pruef_nr] then
      runden_zaehler = runden_zaehler + 1
      positionen_osd : clear()
      if globals.splitscreen == 1 then
        positionen_osd_2 : clear()
      end
      pos_y = 1   -- wenn Erster, dann Liste löschen und von oben neu beginnen
      if gegner_runde[pruef_nr] > globals.race_laps then
        for s = 1, globals.players do   -- wenn Gegner als Erster durchs Ziel, dann den Ziel-Renn-Poller der Spieler deaktivieren
          if __race_pl[s].cur_wp == 1 then
            __race_pl[s].cur_wp  = __race_wp_count
          end
        end
        if     pruef_nr == 1 then
          globals.user_stats[globals.race_laps+1]:set_textcolor( blau )
        elseif pruef_nr == 2 then
          globals.user_stats[globals.race_laps+1]:set_textcolor( h_rot )
        elseif pruef_nr == 3 then
          globals.user_stats[globals.race_laps+1]:set_textcolor( h_gruen )
        elseif pruef_nr == 4 then
          globals.user_stats[globals.race_laps+1]:set_textcolor( h_gelb )
        elseif pruef_nr == 5 then
          globals.user_stats[globals.race_laps+1]:set_textcolor( h_blau )
        elseif pruef_nr == 6 then
          globals.user_stats[globals.race_laps+1]:set_textcolor( h_grau )
        end
        globals.user_stats[globals.race_laps+1]:set_text( text_ende .. text_gegner .. pruef_nr )
        if globals.players == 1 then
          globals.user_stats[globals.race_laps+1]:set_plusx( 155 )
        else
          globals.user_stats[globals.race_laps+1]:set_plusx( 55 )
        end
        globals.exit_level = 1
      end
    else
      pos_y = pos_y + 7   -- wenn nicht Erster, dann einfach an Liste anhängen
    end
    if     pruef_nr == 1 then
      positionen_osd : draw_text ( FONT_MINIFONT, text_gegner .. pruef_nr, blau,    pos_x, pos_y, 0 )
    elseif pruef_nr == 2 then
      positionen_osd : draw_text ( FONT_MINIFONT, text_gegner .. pruef_nr, h_rot,   pos_x, pos_y, 0 )
    elseif pruef_nr == 3 then
      positionen_osd : draw_text ( FONT_MINIFONT, text_gegner .. pruef_nr, h_gruen, pos_x, pos_y, 0 )
    elseif pruef_nr == 4 then
      positionen_osd : draw_text ( FONT_MINIFONT, text_gegner .. pruef_nr, h_gelb,  pos_x, pos_y, 0 )
    elseif pruef_nr == 5 then
      positionen_osd : draw_text ( FONT_MINIFONT, text_gegner .. pruef_nr, h_blau,  pos_x, pos_y, 0 )
    elseif pruef_nr == 6 then
      positionen_osd : draw_text ( FONT_MINIFONT, text_gegner .. pruef_nr, h_grau,  pos_x, pos_y, 0 )
    end
    if globals.splitscreen == 1 then
      if     pruef_nr == 1 then
        positionen_osd_2 : draw_text ( FONT_MINIFONT, text_gegner .. pruef_nr, blau,    pos_x, pos_y, 0 )
      elseif pruef_nr == 2 then
        positionen_osd_2 : draw_text ( FONT_MINIFONT, text_gegner .. pruef_nr, h_rot,   pos_x, pos_y, 0 )
      elseif pruef_nr == 3 then
        positionen_osd_2 : draw_text ( FONT_MINIFONT, text_gegner .. pruef_nr, h_gruen, pos_x, pos_y, 0 )
      elseif pruef_nr == 4 then
        positionen_osd_2 : draw_text ( FONT_MINIFONT, text_gegner .. pruef_nr, h_gelb,  pos_x, pos_y, 0 )
      elseif pruef_nr == 5 then
        positionen_osd_2 : draw_text ( FONT_MINIFONT, text_gegner .. pruef_nr, h_blau,  pos_x, pos_y, 0 )
      elseif pruef_nr == 6 then
        positionen_osd_2 : draw_text ( FONT_MINIFONT, text_gegner .. pruef_nr, h_grau,  pos_x, pos_y, 0 )
      end
    end
  else   -- ein Spieler hat Runde beendet
    if runden_zaehler < __race_pl[pruef_nr-CG_anz].cur_lap then
      runden_zaehler = runden_zaehler + 1
      positionen_osd : clear()
      if globals.splitscreen == 1 then
        positionen_osd_2 : clear()
      end
      pos_y = 1
      if __race_pl[pruef_nr-CG_anz].cur_lap > globals.race_laps then
        if     pruef_nr - CG_anz == 1 then
          globals.user_stats[globals.race_laps+1]:set_textcolor( weiss )
        elseif pruef_nr - CG_anz == 2 then
          globals.user_stats[globals.race_laps+1]:set_textcolor( h_blau  )
        elseif pruef_nr - CG_anz == 3 then
          globals.user_stats[globals.race_laps+1]:set_textcolor( h_gelb )
        elseif pruef_nr - CG_anz == 4 then
          globals.user_stats[globals.race_laps+1]:set_textcolor( h_gruen )
        elseif pruef_nr - CG_anz == 5 then
          globals.user_stats[globals.race_laps+1]:set_textcolor( h_rot )
        elseif pruef_nr - CG_anz == 6 then
          globals.user_stats[globals.race_laps+1]:set_textcolor( blau )
        end
        globals.user_stats[globals.race_laps+1]:set_text( text_ende .. player[pruef_nr-CG_anz]:get_name() )
        if globals.players == 1 then
          globals.user_stats[globals.race_laps+1]:set_plusx( 155 )
        else
          globals.user_stats[globals.race_laps+1]:set_plusx( 55 )
        end
      end
    else
      pos_y = pos_y + 7
    end
    if     pruef_nr - CG_anz == 1 then
      positionen_osd : draw_text ( FONT_MINIFONT, player[pruef_nr-CG_anz]:get_name(), weiss,   pos_x, pos_y, 0 )
    elseif pruef_nr - CG_anz == 2 then
      positionen_osd : draw_text ( FONT_MINIFONT, player[pruef_nr-CG_anz]:get_name(), h_blau,  pos_x, pos_y, 0 )
    elseif pruef_nr - CG_anz == 3 then
      positionen_osd : draw_text ( FONT_MINIFONT, player[pruef_nr-CG_anz]:get_name(), h_gelb,  pos_x, pos_y, 0 )
    elseif pruef_nr - CG_anz == 4 then
      positionen_osd : draw_text ( FONT_MINIFONT, player[pruef_nr-CG_anz]:get_name(), h_gruen, pos_x, pos_y, 0 )
    elseif pruef_nr - CG_anz == 5 then
      positionen_osd : draw_text ( FONT_MINIFONT, player[pruef_nr-CG_anz]:get_name(), h_rot,   pos_x, pos_y, 0 )
    elseif pruef_nr - CG_anz == 6 then
      positionen_osd : draw_text ( FONT_MINIFONT, player[pruef_nr-CG_anz]:get_name(), blau,   pos_x, pos_y, 0 )
    end
    if globals.splitscreen == 1 then
      if     pruef_nr - CG_anz == 1 then
        positionen_osd_2 : draw_text ( FONT_MINIFONT, player[pruef_nr-CG_anz]:get_name(), weiss,   pos_x, pos_y, 0 )
      elseif pruef_nr - CG_anz == 2 then
        positionen_osd_2 : draw_text ( FONT_MINIFONT, player[pruef_nr-CG_anz]:get_name(), h_blau,  pos_x, pos_y, 0 )
      elseif pruef_nr - CG_anz == 3 then
        positionen_osd_2 : draw_text ( FONT_MINIFONT, player[pruef_nr-CG_anz]:get_name(), h_gelb,  pos_x, pos_y, 0 )
      elseif pruef_nr - CG_anz == 4 then
        positionen_osd_2 : draw_text ( FONT_MINIFONT, player[pruef_nr-CG_anz]:get_name(), h_gruen, pos_x, pos_y, 0 )
      elseif pruef_nr - CG_anz == 5 then
        positionen_osd_2 : draw_text ( FONT_MINIFONT, player[pruef_nr-CG_anz]:get_name(), h_rot,   pos_x, pos_y, 0 )
      elseif pruef_nr - CG_anz == 6 then
        positionen_osd_2 : draw_text ( FONT_MINIFONT, player[pruef_nr-CG_anz]:get_name(), blau,    pos_x, pos_y, 0 )
      end
    end
  end
end   -- positionen_anzeigen( pruef_nr )

function knock_out_pruefung( pruef_nr )
  local wih_anz = 0
  local ko_ende = 0
  local o
  for o = 1, CG_anz + globals.players do
    if o <= CG_anz then
      if weg_punkt[o] ~= nil then
        if pruef_nr <= CG_anz then   -- Gegner hat Runde beendet
          if gegner_runde[pruef_nr] > gegner_runde[o] then
            wih_anz = wih_anz + 1
            wer_ist_hinten = o
          end
        else                         -- Spieler hat Runde beendet
          if __race_pl[pruef_nr-CG_anz].cur_lap > gegner_runde[o] then
            wih_anz = wih_anz + 1
            wer_ist_hinten = o
          end
        end
      end
    else
      if player[o-CG_anz].controls:get_disabled() ~= 1 then
        if pruef_nr <= CG_anz then   -- Gegner hat Runde beendet
          if gegner_runde[pruef_nr] > __race_pl[o-CG_anz].cur_lap then
            wih_anz = wih_anz + 1
            wer_ist_hinten = o
          end
        else                         -- Spieler hat Runde beendet
          if __race_pl[pruef_nr-CG_anz].cur_lap > __race_pl[o-CG_anz].cur_lap then
            wih_anz = wih_anz + 1
            wer_ist_hinten = o
          end
        end
      end
    end
    if wih_anz > 1 then
      break
    end
  end
  if wih_anz == 1 then
    if wer_ist_hinten <= CG_anz then
      weg_punkt[wer_ist_hinten] = nil
      gegner[wer_ist_hinten]:set_hit( gegner[wer_ist_hinten]:get_maxhit() )
    else
      player[wer_ist_hinten-CG_anz]:set_dead()
      player[wer_ist_hinten-CG_anz].controls:disable()
      for o = 1, globals.players do
        if player[o].controls:get_disabled() == 1 then
          ko_ende = ko_ende + 1
          if ko_ende == globals.players then
            globals.exit_level = 1
          end
        end
      end
    end
  end
end   -- knock_out_pruefung( pruef_nr )

function gegner_menu()
  objekte_aus_osd_loeschen()
  bildschirm_osd : clear()
  bildschirm_osd : draw_filled_rectangle( 1, 0, 0, 640, 480 )
  bildschirm_osd : draw_text( FONT_IMPACT14, text_titel, d_blau, 1, 50, 1 )
  local x1 = 203
  local x2 = 390
  local y  = 125
  local x3 = 153
  local y3 = 115
  if menu_aktiv == 1 then
    menu_bild_li[1] = bildschirm_osd : add_image( images:load("./frapela/mbl_1.tga"), x3, y3,      6000000, 1 )
    menu_bild_li[1] : set_curframe( 0 )
    bildschirm_osd   : draw_text ( FONT_IMPACT10, text_spiel_art,     gruen,   x1, y,     0 )
    if spiel_art == 1 then
      bildschirm_osd : draw_text ( FONT_IMPACT14, text_spiel_art1,    h_gruen, x2, y,     0 )
    else
      bildschirm_osd : draw_text ( FONT_IMPACT14, text_spiel_art2,    h_gruen, x2, y,     0 )
    end
  else
    menu_bild_li[1] = bildschirm_osd : add_image( images:load("./frapela/mbl_1.tga"), x3, y3,      6000000, 1 )
    menu_bild_li[1] : set_curframe( 1 )
    bildschirm_osd   : draw_text ( FONT_IMPACT10, text_spiel_art,     grau,    x1, y,     0 )
    if spiel_art == 1 then
      bildschirm_osd : draw_text ( FONT_IMPACT14, text_spiel_art1,    h_grau,  x2, y,     0 )
    else
      bildschirm_osd : draw_text ( FONT_IMPACT14, text_spiel_art2,    h_grau,  x2, y,     0 )
    end
  end
  if menu_aktiv == 2 then
    menu_bild_li[2] = bildschirm_osd : add_image( images:load("./frapela/mbl_2.tga"), x3, y3+50,   6000000, 1 )
    menu_bild_li[2] : set_curframe( 0 )
    menu_bild_re_anzeige( 2, globals.race_laps, x2, y + 50, 10 )
    bildschirm_osd : draw_text ( FONT_IMPACT10,   text_runden_anz,    gruen,   x1, y+50,  0 )
  else
    menu_bild_li[2] = bildschirm_osd : add_image( images:load("./frapela/mbl_2.tga"), x3, y3+50,   6000000, 1 )
    menu_bild_li[2] : set_curframe( 1 )
    menu_bild_re_anzeige( 2, globals.race_laps, x2, y + 50, 6000000 )
    bildschirm_osd : draw_text ( FONT_IMPACT10,   text_runden_anz,    grau,    x1, y+50,  0 )
  end
  if menu_aktiv == 3 then
    menu_bild_li[3] = bildschirm_osd : add_image( images:load("./frapela/mbl_3.tga"), x3, y3+100,  6000000, 1 )
    menu_bild_li[3] : set_curframe( 0 )
    menu_bild_re_anzeige( 3, CG_anz, x2, y + 100, 10 )
    bildschirm_osd : draw_text ( FONT_IMPACT10,   text_CG_anz,        gruen,   x1, y+100, 0 )
  else
    menu_bild_li[3] = bildschirm_osd : add_image( images:load("./frapela/mbl_3.tga"), x3, y3+100,  6000000, 1 )
    menu_bild_li[3] : set_curframe( 1 )
    menu_bild_re_anzeige( 3, CG_anz, x2, y + 100, 6000000 )
    bildschirm_osd : draw_text ( FONT_IMPACT10,   text_CG_anz,        grau,    x1, y+100, 0 )
  end
  if menu_aktiv == 4 then
    menu_bild_li[4] = bildschirm_osd : add_image( images:load("./frapela/mbl_4.tga"), x3, y3+150,  6000000, 1 )
    menu_bild_li[4] : set_curframe( 0 )
    menu_bild_re_anzeige( 4, CG_flug_kunst, x2, y + 150, 10 )
    bildschirm_osd : draw_text ( FONT_IMPACT10,   text_CG_flug_kunst, gruen,   x1, y+150, 0 )
  else
    menu_bild_li[4] = bildschirm_osd : add_image( images:load("./frapela/mbl_4.tga"), x3, y3+150,  6000000, 1 )
    menu_bild_li[4] : set_curframe( 1 )
    menu_bild_re_anzeige( 4, CG_flug_kunst, x2, y + 150, 6000000 )
    bildschirm_osd : draw_text ( FONT_IMPACT10,   text_CG_flug_kunst, grau,    x1, y+150, 0 )
  end
  if menu_aktiv == 5 then
    menu_bild_li[5] = bildschirm_osd : add_image( images:load("./frapela/mbl_5.tga"), x3, y3+200,  6000000, 1 )
    menu_bild_li[5] : set_curframe( 0 )
    menu_bild_re_anzeige( 5, CG_flug_tempo, x2, y + 200, 10 )
    bildschirm_osd : draw_text ( FONT_IMPACT10,   text_CG_flug_tempo, gruen,   x1, y+200, 0 )
  else
    menu_bild_li[5] = bildschirm_osd : add_image( images:load("./frapela/mbl_5.tga"), x3, y3+200,  6000000, 1 )
    menu_bild_li[5] : set_curframe( 1 )
    menu_bild_re_anzeige( 5, CG_flug_tempo, x2, y + 200, 6000000 )
    bildschirm_osd : draw_text ( FONT_IMPACT10,   text_CG_flug_tempo, grau,    x1, y+200, 0 )
  end
  if menu_aktiv == 6 then
    menu_bild_li[6] = bildschirm_osd : add_image( images:load("./frapela/mbl_6.tga"), x3, y3+250,  6000000, 1 )
    menu_bild_li[6] : set_curframe( 0 )
    menu_bild_re_anzeige( 6, CG_schuss, x2, y + 250, 10 )
    bildschirm_osd : draw_text ( FONT_IMPACT10,   text_CG_schuss,     gruen,   x1, y+250, 0 )
  else
    menu_bild_li[6] = bildschirm_osd : add_image( images:load("./frapela/mbl_6.tga"), x3, y3+250,  6000000, 1 )
    menu_bild_li[6] : set_curframe( 1 )
    menu_bild_re_anzeige( 6, CG_schuss, x2, y + 250, 6000000 )
    bildschirm_osd : draw_text ( FONT_IMPACT10,   text_CG_schuss,     grau,    x1, y+250, 0 )
  end
  bildschirm_osd : draw_text ( FONT_IMPACT10, text_waehlen,     d_blau, 1, 440, 1 )
  bildschirm_osd : draw_text ( FONT_IMPACT10, text_bestaetigen, d_blau, 1, 460, 1 )
end   -- gegner_menu()

function objekte_aus_osd_loeschen()
  local r, s
  for r = 1, 6 do
    if menu_bild_li[r] ~= nil then
      bildschirm_osd : remove_image( menu_bild_li[r] )
      menu_bild_li[r] = nil
    end
    for s = 1, 6 do
      if menu_bild_re[r][s] ~= nil then
        bildschirm_osd : remove_image( menu_bild_re[r][s] )
        menu_bild_re[r][s] = nil
      end
    end
  end
end   -- objekte_aus_osd_loeschen()

function menu_bild_re_anzeige( menu_re_nr, menu_re_anz, menu_re_x, menu_re_y, menu_re_frame )
  for r = 1, menu_re_anz do
    if     r == 1 then
      menu_bild_re[menu_re_nr][r] = bildschirm_osd : add_image( images:load("./frapela/gegner_1.tga"), menu_re_x, menu_re_y, menu_re_frame, 1 )
    elseif r == 2 then
      menu_bild_re[menu_re_nr][r] = bildschirm_osd : add_image( images:load("./frapela/gegner_2.tga"), menu_re_x, menu_re_y, menu_re_frame, 1 )
    elseif r == 3 then
      menu_bild_re[menu_re_nr][r] = bildschirm_osd : add_image( images:load("./frapela/gegner_3.tga"), menu_re_x, menu_re_y, menu_re_frame, 1 )
    elseif r == 4 then
      menu_bild_re[menu_re_nr][r] = bildschirm_osd : add_image( images:load("./frapela/gegner_4.tga"), menu_re_x, menu_re_y, menu_re_frame, 1 )
    elseif r == 5 then
      menu_bild_re[menu_re_nr][r] = bildschirm_osd : add_image( images:load("./frapela/gegner_5.tga"), menu_re_x, menu_re_y, menu_re_frame, 1 )
    elseif r == 6 then
      menu_bild_re[menu_re_nr][r] = bildschirm_osd : add_image( images:load("./frapela/gegner_6.tga"), menu_re_x, menu_re_y, menu_re_frame, 1 )
    end
    menu_re_x = menu_re_x + 30
  end
end   -- menu_bild_re_anzeige( menu_re_nr, menu_re_anz, menu_re_x, menu_re_y, menu_re_frame )

function gegner_menu_2()
  objekte_aus_osd_loeschen_2()
  bildschirm_osd_2 : clear()
  bildschirm_osd_2 : draw_filled_rectangle( 1, 0, 0, 320, 480 )
  bildschirm_osd_2 : draw_text( FONT_IMPACT14, text_titel_2, d_blau, 0, 50, 0 )
  local x2 = 70
  local y  = 125
  if menu_aktiv == 1 then
    if spiel_art == 1 then
      bildschirm_osd_2 : draw_text ( FONT_IMPACT14, text_spiel_art1,    h_gruen, x2, y    , 0 )
    else
      bildschirm_osd_2 : draw_text ( FONT_IMPACT14, text_spiel_art2,    h_gruen, x2, y    , 0 )
    end
  else
    if spiel_art == 1 then
      bildschirm_osd_2 : draw_text ( FONT_IMPACT14, text_spiel_art1,    h_grau,  x2, y    , 0 )
    else
      bildschirm_osd_2 : draw_text ( FONT_IMPACT14, text_spiel_art2,    h_grau,  x2, y    , 0 )
    end
  end
  if menu_aktiv == 2 then
    menu_bild_re_anzeige_2( 2, globals.race_laps, x2, y + 50, 10 )
  else
    menu_bild_re_anzeige_2( 2, globals.race_laps, x2, y + 50, 6000000 )
  end
  if menu_aktiv == 3 then
    menu_bild_re_anzeige_2( 3, CG_anz, x2, y + 100, 10 )
  else
    menu_bild_re_anzeige_2( 3, CG_anz, x2, y + 100, 6000000 )
  end
  if menu_aktiv == 4 then
    menu_bild_re_anzeige_2( 4, CG_flug_kunst, x2, y + 150, 10 )
  else
    menu_bild_re_anzeige_2( 4, CG_flug_kunst, x2, y + 150, 6000000 )
  end
  if menu_aktiv == 5 then
    menu_bild_re_anzeige_2( 5, CG_flug_tempo, x2, y + 200, 10 )
  else
    menu_bild_re_anzeige_2( 5, CG_flug_tempo, x2, y + 200, 6000000 )
  end
  if menu_aktiv == 6 then
    menu_bild_re_anzeige_2( 6, CG_schuss, x2, y + 250, 10 )
  else
    menu_bild_re_anzeige_2( 6, CG_schuss, x2, y + 250, 6000000 )
 end
  bildschirm_osd_2 : draw_text ( FONT_IMPACT10, text_waehlen_2,     d_blau, 0, 440, 0 )
  bildschirm_osd_2 : draw_text ( FONT_IMPACT10, text_bestaetigen_2, d_blau, 0, 460, 0 )
end   -- gegner_menu_2()

function objekte_aus_osd_loeschen_2()
  local r, s
  for r = 2, 6 do
    for s = 1, 6 do
      if menu_bild_re_2[r][s] ~= nil then
        bildschirm_osd_2 : remove_image( menu_bild_re_2[r][s] )
        menu_bild_re_2[r][s] = nil
      end
    end
  end
end   -- objekte_aus_osd_loeschen_2()

function menu_bild_re_anzeige_2( menu_re_nr_2, menu_re_anz_2, menu_re_x_2, menu_re_y_2, menu_re_frame_2 )
  for r = 1, menu_re_anz_2 do
    if     r == 1 then
      menu_bild_re_2[menu_re_nr_2][r] = bildschirm_osd_2 : add_image( images:load("./frapela/gegner_1.tga"), menu_re_x_2, menu_re_y_2, menu_re_frame_2, 1 )
    elseif r == 2 then
      menu_bild_re_2[menu_re_nr_2][r] = bildschirm_osd_2 : add_image( images:load("./frapela/gegner_2.tga"), menu_re_x_2, menu_re_y_2, menu_re_frame_2, 1 )
    elseif r == 3 then
      menu_bild_re_2[menu_re_nr_2][r] = bildschirm_osd_2 : add_image( images:load("./frapela/gegner_3.tga"), menu_re_x_2, menu_re_y_2, menu_re_frame_2, 1 )
    elseif r == 4 then
      menu_bild_re_2[menu_re_nr_2][r] = bildschirm_osd_2 : add_image( images:load("./frapela/gegner_4.tga"), menu_re_x_2, menu_re_y_2, menu_re_frame_2, 1 )
    elseif r == 5 then
      menu_bild_re_2[menu_re_nr_2][r] = bildschirm_osd_2 : add_image( images:load("./frapela/gegner_5.tga"), menu_re_x_2, menu_re_y_2, menu_re_frame_2, 1 )
    elseif r == 6 then
      menu_bild_re_2[menu_re_nr_2][r] = bildschirm_osd_2 : add_image( images:load("./frapela/gegner_6.tga"), menu_re_x_2, menu_re_y_2, menu_re_frame_2, 1 )
    end
    menu_re_x_2 = menu_re_x_2 + 30
  end
end   -- menu_bild_re_anzeige_2( menu_re_nr_2, menu_re_anz_2, menu_re_x_2, menu_re_y_2, menu_re_frame_2 )

function hook_keyboard_hit_0( key )
  if not ( spiel_phase ) then
    if     key == 84 then   -- KEY_UP
      pfeiltaste_hoch()
    elseif key == 85 then   -- KEY_DOWN
      pfeiltaste_runter()
    elseif key == 82 then   -- KEY_LEFT
      pfeiltaste_links()
    elseif key == 83 then   -- KEY_RIGHT
      pfeiltaste_rechts()
    elseif ( key == 67 ) or ( key == 91 ) then   -- KEY_ENTER oder KEY_ENTER_PAD
      menu_ende()
    end
  elseif spiel_phase == 0 then
    spiel_phase = 1
  end
end   -- hook_keyboard_hit_0(key)

function pfeiltaste_hoch()
  gsound:play_sound(SOUND_MENU_NONO, 100)
  menu_aktiv = menu_aktiv - 1
  if menu_aktiv < 1 then
    menu_aktiv = 6
  end
  gegner_menu()
  if globals.splitscreen == 1 then
    gegner_menu_2()
  end
end   -- pfeiltaste_hoch()

function pfeiltaste_runter()
  gsound:play_sound(SOUND_MENU_NONO, 100)
  menu_aktiv = menu_aktiv + 1
  if menu_aktiv > 6 then
    menu_aktiv = 1
  end
  gegner_menu()
  if globals.splitscreen == 1 then
    gegner_menu_2()
  end
end   -- pfeiltaste_runter()

function pfeiltaste_links()
  gsound:play_sound(SOUND_MENU_NONO, 100)
  if     menu_aktiv == 1 then
    if spiel_art == 1 then
      spiel_art = 2
      if CG_anz + globals.players < globals.race_laps + 1 then
        CG_anz = globals.race_laps + 1 - globals.players
      end
    else
      spiel_art = 1
    end 
  elseif menu_aktiv == 2 then
    globals.race_laps = globals.race_laps - 1
    if globals.race_laps < 1 then
      globals.race_laps = 6
    end
    if ( spiel_art == 2 ) and ( CG_anz + globals.players < globals.race_laps + 1 ) then
      CG_anz = 6
    end
    __race_update_wpstatus_osd()
  elseif menu_aktiv == 3 then
    CG_anz = CG_anz - 1
    if CG_anz < 1 then
      CG_anz = 6
    end
    if ( spiel_art == 2 ) and ( CG_anz + globals.players < globals.race_laps + 1 ) then
      CG_anz = 6
    end
  elseif menu_aktiv == 4 then
    CG_flug_kunst = CG_flug_kunst - 1
    if CG_flug_kunst < 1 then
      CG_flug_kunst = 6
    end
  elseif menu_aktiv == 5 then
    CG_flug_tempo = CG_flug_tempo - 1
    if CG_flug_tempo < 1 then
      CG_flug_tempo = 6
    end
  elseif menu_aktiv == 6 then
    CG_schuss = CG_schuss- 1
    if CG_schuss < 1 then
      CG_schuss = 6
    end
  end
  gegner_menu()
  if globals.splitscreen == 1 then
    gegner_menu_2()
  end
end   -- pfeiltaste_links()

function pfeiltaste_rechts()
  gsound:play_sound(SOUND_MENU_NONO, 100)
  if     menu_aktiv == 1 then
    if spiel_art == 1 then
      spiel_art = 2
      if CG_anz + globals.players < globals.race_laps + 1 then
        CG_anz = globals.race_laps + 1 - globals.players
      end
    else
      spiel_art = 1
    end
  elseif menu_aktiv == 2 then
    globals.race_laps = globals.race_laps + 1
    if globals.race_laps > 6 then
      globals.race_laps = 1
    end
    if ( spiel_art == 2 ) and ( CG_anz + globals.players < globals.race_laps + 1 ) then
      CG_anz = globals.race_laps + 1 - globals.players
    end
    __race_update_wpstatus_osd()
  elseif menu_aktiv == 3 then
    CG_anz = CG_anz + 1
    if CG_anz > 6 then
      CG_anz = 1
    end
    if ( spiel_art == 2 ) and ( CG_anz + globals.players < globals.race_laps + 1 ) then
      CG_anz = globals.race_laps + 1 - globals.players
    end
  elseif menu_aktiv == 4 then
    CG_flug_kunst = CG_flug_kunst + 1
    if CG_flug_kunst > 6 then
      CG_flug_kunst = 1
    end
  elseif menu_aktiv == 5 then
    CG_flug_tempo = CG_flug_tempo + 1
    if CG_flug_tempo > 6 then
      CG_flug_tempo = 1
    end
  elseif menu_aktiv == 6 then
    CG_schuss = CG_schuss + 1
    if CG_schuss > 6 then
      CG_schuss = 1
    end
  end
  gegner_menu()
  if globals.splitscreen == 1 then
    gegner_menu_2()
  end
end   -- pfeiltaste_rechts()

function menu_ende()
  for n = 1, globals.players do
    player[n].controls:enable()
    __race_pl[n].startcounter = 15 * 60
    sp_ru_alt[n]              = 0
  end
  playmap[1].osd : remove( bildschirm_osd )
  gpanel[1]:set_active(1) 
  if globals.splitscreen == 1 then
    playmap[2].osd : remove( bildschirm_osd_2 )
    gpanel[2]:set_active(1) 
  end
  for n = 1, CG_anz do
    if     n == 1 then
      gegner_bild[n] = images:load("./frapela/gegner_1.tga")
    elseif n == 2 then
      gegner_bild[n] = images:load("./frapela/gegner_2.tga")
    elseif n == 3 then
      gegner_bild[n] = images:load("./frapela/gegner_3.tga")
    elseif n == 4 then
      gegner_bild[n] = images:load("./frapela/gegner_4.tga")
    elseif n == 5 then
      gegner_bild[n] = images:load("./frapela/gegner_5.tga")
    elseif n == 6 then
      gegner_bild[n] = images:load("./frapela/gegner_6.tga")
    end
    gegner_runde[n] = 0
    ge_ru_alt[n]    = 0
    weg_punkt[n]    = 0
    weg_punkt_ermittlung( n )
  end
  speichern()
  spiel_phase = 0
end   -- menu_ende()

function bewaffnung()
  if     CG_schuss == 1 then
    local zufi = math.random( 1, 3 )   -- math.random( 1, CG_schuss+1 )
    if     zufi == 1 then
      waffen_art = W_SINGLE
    elseif zufi == 2 then
      waffen_art = W_LASER
    elseif zufi == 3 then
      waffen_art = W_BIGBOMB
    end
  elseif CG_schuss >= 2 then
    local zufi = math.random( 1, 7 )   -- math.random( 1, CG_schuss+1 )
    if     zufi == 1 then
      waffen_art = W_SINGLE
    elseif zufi == 2 then
      waffen_art = W_LASER
    elseif zufi == 3 then
      waffen_art = W_BIGBOMB
    elseif zufi == 4 then
      waffen_art = W_ROCKET
    elseif zufi == 5 then
      waffen_art = W_BOMB
    elseif zufi == 6 then
      waffen_art = W_BUMPER
    elseif zufi == 7 then
      waffen_art = W_PROBE
    --elseif zufi ==  8 then
    --  waffen_art = W_DOUBLE     -- wie W_SINGLE
    --elseif zufi ==  9 then
    --  waffen_art = W_SHOTGUN    -- wie W_SINGLE, aber mit Schrot-Schuss-Sound
    --elseif zufi == 10 then
    --  waffen_art = W_MINE       -- sehr kurzlebig und bewegen sich wie Schüsse
    --elseif zufi == 11 then
    --  waffen_art = W_FREEZER    -- frezzed nicht, aber Sound vom Freezen
    --elseif zufi == 12 then
    --  waffen_art = W_SHRINKER   -- shrinked nicht, aber Sound vom Shrinken
    --elseif zufi == 13 then
    --  waffen_art = W_GAS        -- bei diesen Renn-Gegnern nicht zu gebrauchen
    --elseif zufi == 14 then
    --  waffen_art = W_FAKE       -- bei diesen Renn-Gegnern nicht zu gebrauchen
    end
  end
end   -- bewaffnung()

function speichern()
  datum = os.date( "*t" )
  local aktuelle_zeit = string.format( "%02d:%02d:%02d", datum.hour, datum.min, datum.sec  ) .. " am " .. string.format( "%02d.%02d.%02d", datum.day, datum.month, datum.year )
  datei = io.open( LEVEL_DIR .. "/cgracexx.men", "w" )
  datei : write( '-- Menu-Speicher-Datei' .. '\n' )
  datei : write( '-- CG-Race XX' .. '\n' )
  datei : write( '-- von Frapela' .. '\n' )
  datei : write( '-- ' .. aktuelle_zeit .. '\n' )
  datei : write( '\n' )
  datei : write( 'menu_aktiv        = ' .. menu_aktiv .. '\n' )
  datei : write( 'spiel_art         = ' .. spiel_art ..'\n' )
  datei : write( 'globals.race_laps = ' .. globals.race_laps .. '\n' )
  datei : write( 'CG_anz            = ' .. CG_anz .. '\n' )
  datei : write( 'CG_flug_kunst     = ' .. CG_flug_kunst .. '\n' )
  datei : write( 'CG_flug_tempo     = ' .. CG_flug_tempo .. '\n' )
  datei : write( 'CG_schuss         = ' .. CG_schuss .. '\n' )
  datei : close()
end   -- speichern()

function hook_enemy_dead_0( en )
  if en:get_nr() <= 6 then
    gsound:play_sound( SOUND_EXPL_BIG1, en:get_x(), en:get_y(), 100 )
    if weg_punkt[en:get_nr()] ~= nil then
      if ( gegner_runde[en:get_nr()] > 0 ) and ( weg_punkt[en:get_nr()] < weg_punkt_max * 0.8 ) then
        gegner_runde[en:get_nr()] = gegner_runde[en:get_nr()] - 1
        ge_ru_alt[en:get_nr()] = gegner_runde[en:get_nr()]
      end
      weg_punkt[en:get_nr()] = -300
    end
  end
end   -- hook_enemy_dead_0( en )

function hook_exit_level_1()
  if globals.race_laps < runden_anz_fuer_highscore then
    globals:set_highscore( 0 )
  end
end   -- hook_exit_level_1()

function hook_init_level_0()
  for n = 1, globals.players do
    __race_pl[n].startcounter = 5 * 60 * 60   -- Zeit für die 5 Minuten Terrine!
  end
  dofile(LEVEL_DIR .. "/cgracexx.men")
  __race_update_wpstatus_osd()
  gegner_menu()
  if globals.splitscreen == 1 then
    gegner_menu_2()
  end
end   -- hook_init_level_0()
