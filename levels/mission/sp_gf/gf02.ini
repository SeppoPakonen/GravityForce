-- GF Level 2: INI file

base = bases:add(  0, PLAYER_BASE,  73,  587 )

base = bases:add(  1, CARGO_BASE,  350,  630 )
base:set_cargo_type(CARGO_NORMAL)
base:set_cargo_weight(10)

base = bases:add(  2, CARGO_BASE,  521, 200 )
base:set_cargo_type(CARGO_NORMAL)
base:set_cargo_weight(10)

base = bases:add(  3, CARGO_BASE,  70, 106 )
base:set_cargo_type(CARGO_NORMAL)
base:set_cargo_weight(5)

objects:add(  0, OBJ_PILE,  204,  479 )
objects:add(  1, OBJ_PILE,  432,  621 )
objects:add(  2, OBJ_PILE,  443,   99 )
objects:add(  3, OBJ_PILE,   56,  102 )
objects:add(  4, OBJ_PILE,  154,   99 )
objects:add(  5, OBJ_BUILDING4, 512, 602 )

-- Schilde deaktivieren
player[1]:set_shield(0)
player[1]:set_max_shield(0)
player[1]:set_shield_recharge(0)
player[1]:set_hull(1)
player[1]:set_max_hull(1)
player[1]:set_hull_repair(0)

-- Alle Waffen deaktivieren, Single Blaster einschalten
local n
for n = 1, player[1]:get_avail_weapon_slots() do
  player[1]:deactivate_weapon_slot(n)
end
local firstslot = player[1]:get_weapon_slot(0)
firstslot.type = W_SINGLE
firstslot.active = 1
firstslot.bullets = -1
firstslot.reload = -1
player[1]:set_weapon_slot(0, firstslot);

-- Gegner definieren
myship = enemies:add( 1, E_SHIP_BLUE1, 300, 492, 0, 80, 800, 4, 2, 0 )
myship.wp:add( 300, 492, 0.6 )
myship.wp:add( 338, 545, 0.6 )
myship.wp:add( 448, 545, 0.6 )
myship.wp:add( 521, 545, 0.6 )
myship.wp:add( 460, 599, 0.6 )
myship.wp:add( 382, 591, 0.6 )
myship.wp:add( 338, 545, 0.6 )

myship = enemies:add( 2, E_SHIP_BIGRED, 520,  58, 0, 80, 800, 4, 2, 0 )
myship.wp:add( 520,  58, 0.6 )
myship.wp:add( 514, 140, 0.6 )

myship = enemies:add( 3, E_SHIP_BLUE1, 48, 51, 0, 80, 800, 4, 2, 0 )
myship.wp:add(  48,  51, 0.6 )
myship.wp:add( 198,  56, 0.6 )
myship.wp:add( 200, 131, 0.6 )
myship.wp:add( 354, 132, 0.6 )
myship.wp:add( 317,  56, 0.6 )

myship = enemies:add( 4, E_SHIP_BIGRED, 475, 317, 0, 80, 800, 4, 2, 0 )
myship.wp:add( 475, 317, 0.6 )
myship.wp:add( 228, 340, 0.6 )
myship.wp:add( 350, 260, 0.6 )

mytower = enemies:add( 5, E_TOWER_SINGLE, 638, 289, 0, D_LEFT, 40, 300, 4, 1 )
mytower:set_xradius(1000)
mytower:set_yradius(200)

mytower = enemies:add( 6, E_TOWER_SINGLE, 327, 599, 0, D_RIGHT, 40, 300, 3, 1 )
mytower:set_xradius(450)
mytower:set_yradius(350)

mytower = enemies:add( 7, E_TOWER_SINGLE, 262, 194, 0, D_UP, 40, 300, 5, 1 )
mytower:set_xradius(200)
mytower:set_yradius(200)

mytower = enemies:add( 8, E_TOWER_SINGLE, 310, 194, 0, D_UP, 40, 300, 5, 1 )
mytower:set_xradius(200)
mytower:set_yradius(200)

mytower = enemies:add( 9, E_TOWER_SINGLE, 171, 97, 0, D_UP, 40, 300, 5, 1 )
mytower:set_xradius(200)
mytower:set_yradius(200)

mytower = enemies:add( 10, E_TOWER_SINGLE, 325, 235, 0, D_RIGHT, 40, 300, 3, 1 )
mytower:set_xradius(200)
mytower:set_yradius(200)

mytower = enemies:add( 11, E_TOWER_SINGLE, 238, 237, 0, D_LEFT, 40, 300, 3, 1 )
mytower:set_xradius(200)
mytower:set_yradius(200)

mytower = enemies:add( 12, E_TOWER_THREE, 409, 388, 0, 220, 300, 1.5, 1, 0 )
mytower:set_xradius(600)
mytower:set_yradius(600)

-- Frachtfunktionen einbinden
dofile("./levels/libcargo.sc")

init_cargo()

function hook_player_returns_cargo_0(pl)
  check_cargo_return(pl)
end

function hook_player_dead_0(pl)
  check_cargo_dead(pl)
end
