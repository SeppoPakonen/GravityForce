-- The Move
-- init script

if (VERSION >= 0.9) then
  dofile("./levels/compat.lua")
end

-- set some globals for script

a_start = {}
a_start_y  = 945
a_start[1] = 16
a_start[2] = 16+525
a_start[3] = 16+555*2
a_start[4] = 16+570*3
a_start_num = 1

player_width = player[1]:get_width()
player_height = player[1]:get_height()

-- set home coordinates of players

player[1]:set_home_x(a_start[1]+170)
player[1]:set_home_y(940+180)

player[2]:set_home_x(a_start[1]+170+120)
player[2]:set_home_y(940+180)


-- place objects

-- switches to move level
switch = {}
switch[1] = objects:add(1, OBJ_SWITCHL,  435,  990)
switch[2] = objects:add(2, OBJ_SWITCHR,  620, 1280)
switch[3] = objects:add(3, OBJ_SWITCHL, 1060, 1040)
switch[4] = objects:add(4, OBJ_SWITCHR, 1243, 1270)
switch[5] = objects:add(5, OBJ_SWITCHL, 1633,  995)
switch[6] = objects:add(6, OBJ_SWITCHR, 1816, 1220)

-- special
blackhole = objects:add_special(7, SPOBJ_GRAVTRAP, 845, 1154, 50)
blackhole:set_active(0)

-- "shooters" and their switches
shooter = {}
sh_switch = {}
shooter[1]   = objects:add(10, OBJ_PPILE1,   592, 1240)
shooter[2]   = objects:add(11, OBJ_PPILE1,  1217, 1241)
shooter[3]   = objects:add(12, OBJ_PPILE1,  1809, 1193)

sh_switch[1] = objects:add(13, OBJ_SWITCHD,  457, 1055)
sh_switch[2] = objects:add(14, OBJ_SWITCHU,  603, 1244)
sh_switch[3] = objects:add(15, OBJ_SWITCHD, 1072, 1103)
sh_switch[4] = objects:add(16, OBJ_SWITCHU, 1226, 1245)
sh_switch[5] = objects:add(17, OBJ_SWITCHD, 1651, 1007)
sh_switch[6] = objects:add(18, OBJ_SWITCHU, 1796, 1196)

-- first room, bottom
objects:add_special(20, SPOBJ_BUMPU,   35, 1350)
objects:add_special(21, SPOBJ_BUMPU,  130, 1351)
objects:add_special(22, SPOBJ_BUMPU,  230, 1352)
objects:add_special(23, SPOBJ_BUMPU,  335, 1351)

-- first room, left
objects:add_special(24, SPOBJ_BUMPL,   37, 1245)
objects:add_special(25, SPOBJ_BUMPL,   39, 1130)
objects:add_special(26, SPOBJ_BUMPL,   37, 1009)

-- first room, top
objects:add_special(27, SPOBJ_BUMPD,   90,  951)
objects:add_special(28, SPOBJ_BUMPD,  200,  950)
objects:add_special(29, SPOBJ_BUMPD,  315,  954)

-- first room, tower
objects:add_special(30, SPOBJ_BUMPR,  578, 1255)

-- second room, top
objects:add_special(31, SPOBJ_BUMPD,  536,  954)
objects:add_special(32, SPOBJ_BUMPD,  660,  950)
objects:add_special(33, SPOBJ_BUMPD,  818,  949)
objects:add_special(34, SPOBJ_BUMPD,  968,  953)

-- second room, bottom
objects:add_special(35, SPOBJ_BUMPU,  666, 1349)
objects:add_special(36, SPOBJ_BUMPU,  801, 1350)
objects:add_special(37, SPOBJ_BUMPU,  953, 1349)

-- second room, tower
objects:add_special(38, SPOBJ_BUMPL,  474,  960)

-- third room, top
objects:add_special(39, SPOBJ_BUMPD, 1115,  951)
objects:add_special(40, SPOBJ_BUMPD, 1241,  952)
objects:add_special(41, SPOBJ_BUMPD, 1365,  951)
objects:add_special(42, SPOBJ_BUMPD, 1510,  952)

-- third room, bottom
objects:add_special(43, SPOBJ_BUMPU, 1294, 1351)
objects:add_special(44, SPOBJ_BUMPU, 1425, 1350)
objects:add_special(45, SPOBJ_BUMPU, 1578, 1351)

-- third room, tower
objects:add_special(46, SPOBJ_BUMPR, 1200, 1266)

-- fourth room, top
objects:add_special(47, SPOBJ_BUMPD, 1732,  952)
objects:add_special(48, SPOBJ_BUMPD, 1894,  948)
objects:add_special(49, SPOBJ_BUMPD, 2011,  950)
objects:add_special(50, SPOBJ_BUMPD, 2161,  953)

-- fourth room, bottom
objects:add_special(51, SPOBJ_BUMPU, 1837, 1362)
objects:add_special(52, SPOBJ_BUMPU, 2001, 1351)
objects:add_special(53, SPOBJ_BUMPU, 2158, 1351)

-- fourth room, right
objects:add_special(54, SPOBJ_BUMPR, 2305,  974)
objects:add_special(55, SPOBJ_BUMPR, 2307, 1111)
objects:add_special(56, SPOBJ_BUMPR, 2310, 1260)

-- fourth room, tower
objects:add_special(57, SPOBJ_BUMPR, 1779, 1226)
objects:add_special(58, SPOBJ_BUMPL, 1096,  979)

-- "the cell"
local n
ob = objects:get_spobject(58)
ob_l = ob:get_height()
cell = {}
cellcounter = 0

for n = 0,2 do
  cell[1+n]  = objects:add_special(60+n, SPOBJ_BUMPD, 1280+ob_l*n, 1020)
  cell[4+n]  = objects:add_special(63+n, SPOBJ_BUMPU, 1280+ob_l*n, 1020+3*ob_l)
  cell[7+n]  = objects:add_special(66+n, SPOBJ_BUMPL, 1280,        1020+ob_l*n) 
  cell[10+n] = objects:add_special(69+n, SPOBJ_BUMPR, 1280+3*ob_l, 1020+ob_l*n)
end

for n = 1,12 do
  cell[n]:set_active(0)
  cell[n]:set_invisible(1)
end

-- define required functions

function redefine_coordinates()
  start_x = playmap[1]:get_scroll_x()
  start_y = a_start_y
  end_x   = start_x + 640
  end_y   = start_y + 480 - 56

  local plus_x = 0
  if (cellcounter > 0) then plus_x = 50 end
    
  player[1]:set_home_x(start_x+170+plus_x)
  player[2]:set_home_x(start_x+170+120+plus_x)
end

function player_screen_check(a)
  if (player[a]:get_x() > end_x or player[a]:get_x() < start_x - player_width or
      player[a]:get_y() > end_y or player[a]:get_y() < start_y - player_height) then
      
    if (player[a]:get_dead() == 0) then 
      player[a]:set_dead()      
      player[a]:inc_suicides()
    end
    
  end
end

function do_switch_action(n, hitby)
  local a,b
  
  -- let players jump to the end
  if (n == 1) then
    playmap[1]:scroll_to(a_start[4], a_start_y, 0)
    redefine_coordinates()
    for a = 1,2 do
      player[a]:set_x(player[a]:get_home_x())
      player[a]:set_y(player[a]:get_home_y())

      for b = 1,5 do
        effects.explosions:add(EXP_MED_1, 8, random(10), player[a]:get_x()-20+random(30), player[a]:get_y()-20+random(30))
      end
    end

  -- shoot some strong bullets
  elseif (n == 2) then
    for a = 1,20 do
      effects.bullets:add(W_SINGLE, hitby, 0, shooter[1]:get_x()+3, shooter[1]:get_y()-2, 5-a/2, 1, 3, 0)
    end 
  
  -- activate / deactivate "black hole" in second room
  elseif (n == 3) then
    if (blackhole:get_active() == 1) then blackhole:set_active(0)
    else blackhole:set_active(1) end

  -- shoot some bombs
  elseif (n == 4) then
    for a = 1,6 do
      effects.bullets:add(W_BOMB, hitby, 0, shooter[2]:get_x()+3, shooter[2]:get_y()-5, 3-a, 2, 2, 0)
    end 

  -- activate "the cell"
  elseif (n == 5) then
    for a = 1,12 do
      for b = 1,3 do
        local t = cell[a]:get_type()
        if (t == SPOBJ_BUMPU or t == SPOBJ_BUMPD) then
          effects.explosions:add(EXP_MED_1, 8, random(20), cell[a]:get_x()+random(ob_l), cell[a]:get_y())
        else
          effects.explosions:add(EXP_MED_1, 8, random(20), cell[a]:get_x(), cell[a]:get_y()+random(ob_l))
        end
      end
      cell[a]:set_active(1)
      cell[a]:set_invisible(0)
    end   
    -- activate for 1 minute
    cellcounter = 60 * 60
    -- warp players into cell
    redefine_coordinates()
    for a = 1,2 do
      player[a]:return_home()
      for b = 1,5 do
        effects.explosions:add(EXP_MED_1, 8, random(10), player[a]:get_x()-20+random(30), player[a]:get_y()-20+random(30))
      end
    end
    playmap[1]:scroll_to(a_start[3], a_start_y, 0)

  -- shoot freezers or shrinkers
  elseif (n == 6) then
    for a = 1,12 do
      local type
      if (random(2) == 1) then type = W_FREEZER else type = W_SHRINKER end
      effects.bullets:add(type, hitby, 0, shooter[3]:get_x()+3, shooter[3]:get_y()-5, 6-a, 1, random(15)*60, 0)
    end 
  
  end          
end

function hook_object_hit_0(ob)
  local n = ob:get_nr()
  
  -- switches (level move)
  if (n >= 0 and n <= 6) then
    if     (n == 1 or n == 4) then a_start_num = 2
    elseif (n == 3 or n == 6) then a_start_num = 3
    elseif (n == 2)           then a_start_num = 1
    elseif (n == 5)           then a_start_num = 4 end

    if (playmap[1]:get_scroll_to_x() == -1) then
      playmap[1]:scroll_to(a_start[a_start_num], a_start_y, 2)
    else
      playmap[1]:scroll_to(playmap[1]:get_scroll_x(), a_start_y, 0)
    end
  end
  
  -- switches (shooters & extra stuff)
  if (n >= 13 and n <= 18) then
    do_switch_action(n-12, ob:get_hitby())
  end
end

function update_stuff()
  if (cellcounter > 1) then cellcounter = cellcounter - 1 end
  
  -- deactivate cell if counter reaches 0
  if (cellcounter == 1) then
    cellcounter = 0
    for n = 1,12 do
      cell[n]:set_active(0)
      cell[n]:set_invisible(1)
      local b
      for b = 1,3 do
        local t = cell[n]:get_type()
        if (t == SPOBJ_BUMPU or t == SPOBJ_BUMPD) then
          effects.explosions:add(EXP_MED_1, 8, random(20), cell[n]:get_x()+random(ob_l), cell[n]:get_y())
        else
          effects.explosions:add(EXP_MED_1, 8, random(20), cell[n]:get_x(), cell[n]:get_y()+random(ob_l))
        end
      end      
    end
  end
end

-- do initialization

redefine_coordinates()
